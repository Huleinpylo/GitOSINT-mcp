version: '3.8'

services:
  gitosint-mcp:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: gitosint-mcp-server
    restart: unless-stopped
    environment:
      - PYTHONPATH=/app/src
      - LOG_LEVEL=INFO
      - RATE_LIMIT_DELAY=1.0
    volumes:
      - ./logs:/app/logs
      - ./config:/app/config
    ports:
      - "8000:8000"  # Optional: if you want to expose HTTP interface
    networks:
      - gitosint-network
    healthcheck:
      test: ["CMD", "python", "-c", "import src.gitosint_mcp.server; print('OK')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add Redis for caching (if needed in future)
  redis:
    image: redis:7-alpine
    container_name: gitosint-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - gitosint-network
    profiles:
      - with-cache

  # Optional: Add monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: gitosint-prometheus
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - gitosint-network
    profiles:
      - monitoring

volumes:
  redis_data:
  prometheus_data:

networks:
  gitosint-network:
    driver: bridge